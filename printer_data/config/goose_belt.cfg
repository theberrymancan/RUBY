#################################################
#      Goose Belt Purger configuration file     #
#################################################
# See https://github.com/Graylag-PD/Goose-Belt-Purger for more information
#
# Configuration file version: 0.7.2 (20250822)

### Belt pin definition ###
[output_pin goose_belt]
# Define 'pin:' to your board. Do not change remaining lines 
pin: PD15
pwm: True
hardware_pwm: True
cycle_time: 0.00004   # 25kHz PWM

### Macro definition ###
[gcode_macro GOOSE_PURGE]
description: Goose Belt Purger routine. Call with parameter PURGE_LENGTH or PURGE_VOLUME to set required purge volume (in mm or mm^3) 
            # Note: Parameters LENGTH and VOLUME are also available, but deprecated and will be removed in a future release
# ===Parameters===
#Parametrization is ordered according to phases where each parameter is used. Each phase is described in its function

#############
# General
#############
    # Filament diameter (mm). Used to convert purge volume to purge length. Valid range is <1.0 .. 4.0>
variable_filament_diameter: 1.75

#############
# Phase 0: Staging
#############
# Toolhead goes to a safe position from which we can reach purging belt
#________________________
    # True if purging shall start by movement to staging point. False if printhead shall go directly to purging position
    # Can be disabled if you are certain you will only ever call purging from already safe spot. This is often case with MMUs, for which you park first anyway to swap a filament
variable_start_with_stage: True
    # where should toolhead go before reaching purge position? Should be safe spot which can be reached without collisions and from which purge position can be reached
variable_x_stage: 172
variable_y_stage: 250
variable_z_stage: False    # set 'False' if you have gantry mounted purger and you do not want any Z axis movement. Set numerical value if you need to move in Z axis, e.g. frame mounting on V2.4
    # what speed should be used to go to staging position before purge (mm/s)
variable_th_to_stage: 50

#############
# Phase 1: Move to purging location
#############
# Toolhead goes to purging position and belt gets activated
#________________________
    # where should toolhead go for actual purging
variable_x_purge: 172
variable_y_purge: 255
variable_z_purge: False    # set 'False' if you have gantry mounted purger and you do not want any Z axis movement. Set numerical value if you need to move in Z axis, e.g. frame mounting on V2.4
    # what speed should be used to go to purge position. Also used for return to stage after purge (mm/s)
variable_th_to_purge: 20
    # speed at which should be belt driven (PWM duty cycle) Should be value between 0.0 and 1.0
variable_belt_pwm: 0.25
    # Fan control:
    # Activating or disabling fan may have beneficial effect on adhesion to belt or to detachement from belt. Purge macro can store your fan setting, override it for duration of purge and automaticaly restore it after
    # This variable controls if fan is controled by macro. False if fan should not be overriden
variable_control_fan: True
    # This sets fan speed during purge routine. Value between 0.0 and 1.0. Beware, if you print materials sensitive to draft, setting your fan too high can have negative influence on printed object
variable_fan_speed: 0.0

#############
# Phase 2a: Purging
#############
# Single purging segment. Followed by Phase 2b: Dwell if full purge volume was not reached, or by Phase 3: After run, if we are done purging
#________________________
    # feedrate for extrusion during purge (mm/s)
variable_extrusion_fr: 5
  # feedrate for retraction (mm/s)
variable_retraction_fr: 30
  # feedrate for de-retraction (mm/s)
variable_deretraction_fr: 30
  # Purging volume is split into several shorter segments to ensure waste material has manageable size. Each segment is folowed by retraction. Macro adjusts actual segment length to waste as little fillament as possible.
    # minimum length of extrusion (mm). 
variable_extrusion_min: 20
    # maximun length of extrusion (mm)
variable_extrusion_max: 30
    # retraction length
variable_retraction: 2
    # Round up last segment? Last segment in purge routine is usually shorter than other segments. It might be good idea to round up last segment length to match others to prevent issues with waste removal. Increases waste volume.
    # First segment is always at least extrusion_min
variable_roundup: True
    # default purge volume to be used if no parameters are passed to macro (mm3)
variable_default_purge_volume: 0


#############
# Phase 2b: Dwell
#############
# Dwell in between purging segments. Purpose is to create physical separation between purge segments. Is followed by deretraction and always proceeds back to Phase 2a
#________________________
    # dwell time between retraction and deretraction (in milliseconds)
variable_rtr_dwell: 100
    # speed belt should have during dwell. Usually 100% PWM (1.0) to shorten the dwell phase. Set -1 if normal purging speed shall be kept.
variable_belt_pwm_dwell: 1.0
    # this is additional dwell time to allow belt to slow down. Might not be needed if the inertia of the system is low (top belt speed is low), in which case set it to 0. Skipped if you are not changing belt speed during dwell
variable_slowdown_dwell: 100
    # deretraction length
variable_deretraction: 2

#############
# Phase 3: After run
#############
# Finishing steps of macro, such as switchin off motor
#________________________
    # final retraction length (mm). Applied at the end of last extrusion. Can be different from regular retraction. Increasing this value reduces oozing, but unless you start your print moves with deretraction (or priming), can cause gaps in print.
variable_final_retraction: 2
  # feedrate for final retraction (mm/s)
variable_final_retraction_fr: 30
    # End with stage? True if purging shall end by movement back to staging point (see Phase 0). False if you want to skip staging and go directly to printing moves
    # Can usualy be disabled, which will save time and reduce oozing
variable_end_with_stage: True
    # Should printer restore Z coordinate after purge? Useful for frame mounted purgers. Changes Z by G1 command directly from staging or purging position.
    # Set false for when Z movement is not needed (e.g. Trident, or gantry mounted V2.4)
variable_restore_z: False
    # what speed should be used to restore Z (mm/s). Ignored if restore_z is set to False
variable_th_z_restore: 10
    # how long after purging routine ends should be belt stopped. Useful to cleanup all the remains on belt (in seconds)
variable_time_belt_stop: 16
    # speed belt should have during ending phase. Usually 100% PWM (1.0) to shorten the cleaning. Set -1 if normal purging speed shall be kept.
variable_belt_pwm_end: 1.0
    # user script to be called at the end of macro. Can be used to initiate for example wiping on brush. Set '' to not call anything
variable_user_end_script: ''



### DO NOT EDIT BEYOND THIS POINT ###

# ===Code=== 
gcode:

            #purging routine for single segment. Recurses itself for remaining segments
    {% macro purge_segment(length_remaining) %}
          {% if length_remaining > 0 %}
            #this part runs when we are nearing end of requested purge length
            {% if length_remaining <= extrusion_segment %}
                {% if roundup %}
                    {% if length_remaining < extrusion_min %}
                        G1 E{extrusion_min} F{extrusion_fr*60}
                    {% else %}
                        G1 E{extrusion_segment} F{extrusion_fr*60}
                    {% endif %}
                {% else %}
                    G1 E{length_remaining} F{extrusion_fr*60}
                {% endif %}
                G1 E{(-final_retraction)} F{final_retraction_fr*60}
            {% else %}
            #this is normal segment
                G1 E{extrusion_segment} F{extrusion_fr*60}
                G1 E{(-retraction)} F{retraction_fr*60}
                #dwell. Is preceeded and followed by code to speed up and restore belt speed
                {% if belt_pwm_dwell >= 0 %}
                    SET_PIN PIN=goose_belt VALUE={belt_pwm_dwell}
                {% endif %}
                G4 P{rtr_dwell}
                {% if belt_pwm_dwell >= 0 %}
                    SET_PIN PIN=goose_belt VALUE={belt_pwm}
                    G4 P{slowdown_dwell}
                {% endif %}
                #deretraction
                G1 E{deretraction} F{deretraction_fr*60}
                #recursion
                {purge_segment(length_remaining - extrusion_segment)}
            {% endif %}
        {% endif %}
    {% endmacro %}
    
    #read parameters
    {% set purge_volume = params.PURGE_VOLUME|default(0)|float %}
    {% set purge_length = params.PURGE_LENGTH|default(0)|float %}

    #following lines are related to old parameters and will be removed eventually
    {% set volume = params.VOLUME|default(0)|float %}
    {% set length = params.LENGTH|default(0)|float %}
    #deprecation message - to inform users that they should no longer use those
    {% if ((length != 0) or (volume !=0)) %}
        M118 ðŸª¿ Parameters LENGTH and VOLUME have been deprecated and will be removed in a future release of the config. Use PURGE_LENGTH and PURGE_VOLUME instead.
    {% endif %}
    #conversion from old parameters
    {% if ((purge_length == 0) and (length != 0)) %}
        {% set purge_length = length %}
    {% endif %}
    {% if ((purge_volume == 0) and (volume != 0)) %}
        {% set purge_volume = volume %}
    {% endif %}

    #check if purge_volume was provided and if not assign it default value
    #note, we are doing this before sanity check, to handle possibility user entered negative default value. This also allows for override of default value to zero by requesting negative PURGE_VOLUME or PURGE_LENGTH
    {% if purge_volume == 0 %}
        {% set purge_volume = default_purge_volume %}
    {% endif %}
        
    #sanity checks against wrong user inputs
    {% if purge_volume < 0 %}
        {% set purge_volume = 0 %}
    {% endif %}
    {% if purge_length < 0 %}
        {% set purge_length = 0 %}
        {% set purge_volume = 0 %}
    {% endif %}
    {% if extrusion_max <= 0 %}
        M118 Variable 'extrusion_max' must be positive number, overriding with value of 30 mm
        {% set extrusion_max = 30 %}
    {% endif %}
    {% if ((extrusion_min > extrusion_max) or (extrusion_min < 0)) %}
        M118 Variable 'extrusion_min' must be in range of <0..'extrusion_max'>, overriding with value of 'extrusion_max'
        {% set extrusion_min = extrusion_max %}
    {% endif %}
    {% if ((filament_diameter < 1) or (filament_diameter > 4)) %}
        M118 Filament diameter variable outside expected range, calculating with default 1.75 mm
        {% set filment_diameter = 1.75 %}
    {% endif %}
    
    #check if length was provided and if not calculate it from volume. If yes, calculate purge_volume for later use
    {% if purge_length == 0 %}
        {% set purge_length = purge_volume/(3.1415926*filament_diameter*filament_diameter/4) %}
    {% else %}
        {% set purge_volume = purge_length*(3.1415926*filament_diameter*filament_diameter/4) %}
    {% endif %}
    
    #calculate actual extrusion segment
    {% set segments = (purge_length / extrusion_max)|round(0, 'ceil')|int %}
    {% if segments > 0 %}
        {% set extrusion_segment = purge_length|float / segments %}
    {% else %}   #this can happen pretty much only when purge_length is 0
        {% set extrusion_segment = extrusion_min %}
    {% endif %}
    {% if extrusion_segment < extrusion_min %}
        {% set extrusion_segment = extrusion_min %}
    {% endif %}
    
    #handle Z coordinate
    {% if z_stage == False %}
        {% set z_stage = printer.toolhead.position.z %}
    {% endif %}
    {% if z_purge == False %}
        {% set z_purge = printer.toolhead.position.z %}
    {% endif %}
    {% if restore_z == True %}
        {% set original_z = printer.toolhead.position.z %}
    {% endif %}
        
    #
    UPDATE_DELAYED_GCODE ID=_goose_belt_timer DURATION=0
    SAVE_GCODE_STATE NAME=goose_purge_state
    G90
    M83

       #report purge start
    M118 ðŸª¿ Initiating purge. Requested purge of {purge_length|round(1, 'common')} mm ({purge_volume|round(1, 'common')} mm3) filament

    
        #go to staging
    {% if start_with_stage == True %}
        G1 X{x_stage} Y{y_stage} Z{z_stage} F{th_to_stage*60}
    {% endif %}
        #start belt
    SET_PIN PIN=goose_belt VALUE={belt_pwm}
        #fan logic
    {% if control_fan == True %}
        {% set fan_speed_before_purge = printer.fan.speed * 255 %}
        M106 S{fan_speed * 255}
    {% endif %}    
        #go to purge position
    G1 X{x_purge} Y{y_purge} Z{z_purge} F{th_to_purge*60}

        #purging cycle   
    {purge_segment(purge_length)}
        
        #call delayed macro to stop the belt or stop it right away if requested time is 0
    {% if time_belt_stop <= 0 %}
        SET_PIN PIN=goose_belt VALUE=0
    {% else %}
        {% if belt_pwm_dwell >= 0 %}
            SET_PIN PIN=goose_belt VALUE={belt_pwm_end}
        {% endif %}
        UPDATE_DELAYED_GCODE ID=_goose_belt_timer DURATION={time_belt_stop}
    {% endif %}

        #fan logic
    {% if control_fan == True %}
        M106 S{fan_speed_before_purge}
    {% endif %}    
    
        #go back to staging
    {% if end_with_stage == True %}
        G1 X{x_stage} Y{y_stage} Z{z_stage} F{th_to_purge*60}
    {% endif %}
    
        #restore Z if needed
    {% if restore_z == True %}
        G1 Z{original_z} F{th_z_restore*60}
    {% endif %}
    
        #user end script
    { user_end_script }
    
        #report actually extruded filament
    {% if roundup == True %}
        M118 ðŸª¿ Purge completed! Purged {(extrusion_segment*segments)|round(1, 'common')} mm ({((extrusion_segment*segments)*3.1415926*filament_diameter*filament_diameter/4)|round(1, 'common')} mm3) of filament in {segments} segment(s). Rounding up active.
    {% else %}
        {% if ((purge_length > 0) and (purge_length < extrusion_min)) %}
            M118 ðŸª¿ Purge completed! Purged {(extrusion_segment)|round(1, 'common')} mm ({((extrusion_segment)*3.1415926*filament_diameter*filament_diameter/4)|round(1, 'common')} mm3) of filament in 1 segment. Extrusion overriden by 'extrusion_min' variable.
        {% else %}
            M118 ðŸª¿ Purge completed! Purged {(purge_length)|round(1, 'common')} mm ({purge_volume|round(1, 'common')} mm3) of filament in {segments} segment(s). 
        {% endif %}
    {% endif %}
    

    RESTORE_GCODE_STATE NAME=goose_purge_state
    
    
    
[delayed_gcode _goose_belt_timer]
gcode:
    
    SET_PIN PIN=goose_belt VALUE=0    
   
[gcode_macro _goose_purge_hh]
gcode:
   GOOSE_PURGE PURGE_VOLUME={printer.mmu.toolchange_purge_volume}
